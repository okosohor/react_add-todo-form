{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","getUser","userId","usersFromServer","find","todosWithUser","App","useState","setUser","setTitle","setTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","maxId","newTodo","Math","max","type","placeholder","value","onChange","target","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc261ddf.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    user,\n    title,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types';\n\nconst getUser = (userId: number) => {\n  const foundedUser = usersFromServer.find(user => (\n    userId === user.id\n  ));\n\n  return foundedUser || null;\n};\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUser(todo.userId),\n  }\n));\n\nexport const App = () => {\n  const [user, setUser] = useState(0);\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState([...todosWithUser]);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (title === '') {\n            setTitleError(true);\n          }\n\n          if (user === 0) {\n            setUserError(true);\n          }\n\n          if (title === '' && user === 0) {\n            setTitleError(true);\n            setUserError(true);\n          }\n\n          if (title !== '' && user !== 0) {\n            const maxId = todos.map((todo) => (todo.id));\n            const newId = Math.max(...maxId) + 1;\n            const newTodo: Todo = {\n              id: newId,\n              userId: user,\n              title,\n              completed: false,\n              user: getUser(user),\n            };\n\n            setTodos([...todos, newTodo]);\n\n            setTitle('');\n            setUser(0);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n          />\n          {titleError && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={(event) => {\n              setUser(+event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value={0} disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(userFromServer => (\n              userFromServer && (\n                <option key={userFromServer.id} value={userFromServer.id}>\n                  {userFromServer.name}\n                </option>\n              )))}\n\n          </select>\n\n          {userError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}